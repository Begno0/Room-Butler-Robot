/* Generated by AN DISI Unibo */ 
package it.unibo.emulatedmaitre

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Emulatedmaitre ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("EMULATED MAITRE STARTS")
					}
				}	 
				state("s1") { //this:State
					action { //it:State
						forward("prepare", "prepare" ,"roombutlerrobot" ) 
					}
					 transition(edgeName="t014",targetState="s2",cond=whenEvent("prepareDone"))
				}	 
				state("s2") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(2000) 
						forward("addFood", "addFood(lasagna)" ,"roombutlerrobot" ) 
					}
					 transition(edgeName="t015",targetState="s3",cond=whenDispatch("warning"))
					transition(edgeName="t016",targetState="s4",cond=whenEvent("addDone"))
				}	 
				state("s3") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(2000) 
						forward("addFood", "addFood(beef)" ,"roombutlerrobot" ) 
					}
					 transition(edgeName="t017",targetState="s4",cond=whenEvent("addDone"))
				}	 
				state("s4") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(2000) 
						forward("clear", "clear" ,"roombutlerrobot" ) 
					}
				}	 
			}
		}
}
